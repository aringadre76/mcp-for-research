{
  "timestamp": "2025-08-24T00:02:06.420Z",
  "summary": {
    "total": 4,
    "passed": 4,
    "failed": 0
  },
  "results": [
    {
      "name": "Build Server",
      "status": "PASSED",
      "duration": 1.487,
      "message": "Command executed in 1.487s",
      "output": "> scholarly-research-mcp@1.4.0 build\n> tsc",
      "error": ""
    },
    {
      "name": "Google Scholar Tests",
      "status": "PASSED",
      "duration": 0.402,
      "message": "Command executed in 0.402s",
      "output": "> scholarly-research-mcp@1.4.0 test:google-scholar-simple\n> node tests/test-simple-google-scholar.js\n\nTesting Google Scholar Adapter (Simple Test)...\n\n1. Creating adapter instance...\n✓ Adapter created successfully\n\n2. Testing browser initialization...\n✓ Browser initialized successfully\n\n3. Testing page creation...\n✓ Page created successfully\n\n4. Testing basic functionality...\n✓ All core methods are available\n\n5. Closing browser...\n✓ Browser closed successfully\n\n✅ All basic tests passed!\n\nNote: Full functionality testing requires a working Chrome/Chromium installation.\nThe adapter is ready for use with the MCP server.",
      "error": "\u001b[1m\u001b[43m\u001b[30m\n  Puppeteer old Headless deprecation warning:\u001b[0m\u001b[33m\n    In the near feature `headless: true` will default to the new Headless mode\n    for Chrome instead of the old Headless implementation. For more\n    information, please see https://developer.chrome.com/articles/new-headless/.\n    Consider opting in early by passing `headless: \"new\"` to `puppeteer.launch()`\n    If you encounter any bugs, please report them to https://github.com/puppeteer/puppeteer/issues/new/choose.\u001b[0m"
    },
    {
      "name": "Unified Search Tests",
      "status": "PASSED",
      "duration": 10.076,
      "message": "Command executed in 10.076s",
      "output": "> scholarly-research-mcp@1.4.0 test:unified\n> node tests/test-unified-search.js\n\nTesting Unified Search Adapter...\n\n1. Testing unified search across all sources...\nFound 6 papers across all sources:\n\n1. Artificial intelligence to deep learning: machine intelligence approach for drug discovery.\n   Authors: Gupta Rohan, Srivastava Devesh, Sahu Mehar, Tiwari Swati, Ambasta Rashmi K, Kumar Pravir\n   Journal: Mol Divers\n   Date: 2021\n   Source: pubmed\n   PMID: 33844136\n   PMC ID: PMC8040371\n   DOI: 10.1007/s11030-021-10217-3\n\n2. Artificial Intelligence in Anesthesiology: Current Techniques, Clinical Applications, and Limitations.\n   Authors: Hashimoto Daniel A, Witkowski Elan, Gao Lei, Meireles Ozanan, Rosman Guy\n   Journal: Anesthesiology\n   Date: 2020\n   Source: pubmed\n   PMID: 31939856\n   PMC ID: PMC7643051\n   DOI: 10.1097/ALN.0000000000002960\n\n3. Introduction to artificial intelligence in medicine.\n   Authors: Mintz Yoav, Brodie Ronit\n   Journal: Minim Invasive Ther Allied Technol\n   Date: 2019\n   Source: pubmed\n   PMID: 30810430\n   DOI: 10.1080/13645706.2019.1575882\n\n4. Artificial intelligence\n   Authors: EB Hunt\n   Journal: 2014\n   Date: 2014\n   Source: google-scholar\n   URL: https://books.google.com/books?hl=en&lr=&id=9y2jBQAAQBAJ&oi=fnd&pg=PP1&dq=artificial+intelligence&ots=uQWzVq4VrD&sig=wg8DinXdDq3lHuZiFRQxoiTwkn4\n   Citations: 467\n\n5. Artificial intelligence in medicine\n   Authors: J Holmes, L Sacchi, R Bellazzi\n   Journal: Ann R Coll Surg Engl, 2004\n   Date: 2004\n   Source: google-scholar\n   URL: https://link.springer.com/content/pdf/10.1007/978-3-319-19551-3.pdf\n   PDF: https://pmc.ncbi.nlm.nih.gov/articles/PMC1964229/pdf/15333167.pdf\n   Citations: 1463\n\n6. Quo vadis artificial intelligence?\n   Authors: Y Jiang, X Li, H Luo, S Yin, O Kaynak\n   Journal: Discover Artificial Intelligence, 2022\n   Date: 2022\n   Source: google-scholar\n   URL: https://link.springer.com/article/10.1007/s44163-022-00022-8\n   PDF: https://link.springer.com/content/pdf/10.1007/s44163-022-00022-8.pdf\n   Citations: 638\n\n2. Testing PubMed-only search...\nFound 2 papers from PubMed:\n   1. Introduction to Machine Learning, Neural Networks, and Deep Learning. (pubmed)\n   2. A guide to machine learning for biologists. (pubmed)\n\n3. Testing Google Scholar-only search...\nFound 1 papers from Google Scholar:\n   1. Artificial Intelligence Applications in Healthcare: A Systematic Review of Their Impact on Nursing Practice and Patient Outcomes (google-scholar)\n\n4. Testing date-based sorting...\nFound 5 papers sorted by date:\n   1. A study on the effectiveness of machine learning models for hepatitis prediction (2025)\n   2. Machine learning-based prediction model for post-stroke cerebral-cardiac syndrome: a risk stratification study (2025)\n   3. Neural networks for biomechanics. (2024)\n   4. Convolutional neural networks. (2023)\n   5. Convolutional Neural Networks for Radiologic Images: A Radiologist's Guide. (2019)\n\n5. Testing paper details retrieval...\nPaper details retrieved: Artificial intelligence to deep learning: machine intelligence approach for drug discovery.\n\nTest completed.",
      "error": "\u001b[1m\u001b[43m\u001b[30m\n  Puppeteer old Headless deprecation warning:\u001b[0m\u001b[33m\n    In the near feature `headless: true` will default to the new Headless mode\n    for Chrome instead of the old Headless implementation. For more\n    information, please see https://developer.chrome.com/articles/new-headless/.\n    Consider opting in early by passing `headless: \"new\"` to `puppeteer.launch()`\n    If you encounter any bugs, please report them to https://github.com/puppeteer/puppeteer/issues/new/choose.\u001b[0m"
    },
    {
      "name": "Firecrawl Tests",
      "status": "PASSED",
      "duration": 0.266,
      "message": "Command executed in 0.266s",
      "output": "> scholarly-research-mcp@1.4.0 test:firecrawl\n> node tests/test-firecrawl-integration.js\n\nTesting Firecrawl Integration...\n\n1. Testing Firecrawl adapter creation...\n✓ Firecrawl adapter created successfully\n\n2. Testing enhanced unified search adapter...\n✓ Enhanced unified search adapter created successfully\n\n3. Testing search method info...\n✓ Search method: puppeteer\n✓ Firecrawl available: false\n\n4. Testing preference setting...\n✓ Firecrawl preference set to true\n\n5. Testing search method after preference change...\n✓ New search method: firecrawl\n\n6. Testing fallback to Puppeteer...\n✓ Fallback method: puppeteer\n\n✅ All Firecrawl integration tests passed!\n\nNote: To use Firecrawl, you need to:\n1. Have the Firecrawl MCP server running\n2. Set the Firecrawl client using setFirecrawlClient()\n3. Use the search_with_firecrawl tool in the MCP server",
      "error": ""
    }
  ]
}